{
  "hash": "ba851ac1dae5c58ef35f5aed653fc5bd",
  "result": {
    "markdown": "---\ntitle: Clustering\nauthor: Hoda Alemrajabi\ndate: '2023-11-04'\ncategories:\n  - news\n  - code\n  - analysis\nimage: second post.png\n---\n\nIn this post, I will talk about clustering in ML!\n\n![](second post.png){width=\"366\"}\n\nClustering is a fundamental concept in machine learning, particularly in unsupervised learning. A common method for clustering is the K-Means algorithm. We can visualize clustering by using Python with libraries such as **`matplotlib`** for plotting and **`sklearn`** for machine learning functionalities.\n\nHere's an example of a Python script that generates random data, applies the K-Means clustering algorithm, and visualizes the results:\n\n-   **Generate Random Data**: Creating a dataset with random points.\n\n-   **Apply K-Means Clustering**: Using the K-Means algorithm to identify clusters in the data.\n\n-   **Visualization**: Plotting the data points and color them according to their cluster.\n\nHere's the Python code:\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\nfrom sklearn.cluster import KMeans\nfrom sklearn.datasets import make_blobs\n\n# Generate random data\nn_samples = 300\nn_features = 2\ncenters = 4\nX, y_true = make_blobs(n_samples=n_samples, n_features=n_features, centers=centers)\n\n# Apply K-Means Clustering\nkmeans = KMeans(n_clusters=centers)\nkmeans.fit(X)\ny_kmeans = kmeans.predict(X)\n\n# Visualization\nplt.scatter(X[:, 0], X[:, 1], c=y_kmeans, s=50, cmap='viridis')\ncenters = kmeans.cluster_centers_\nplt.scatter(centers[:, 0], centers[:, 1], c='black', s=200, alpha=0.5)\nplt.title('K-Means Clustering')\nplt.xlabel('Feature 1')\nplt.ylabel('Feature 2')\nplt.show()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Users\\hodaa\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1412: FutureWarning:\n\nThe default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n\nC:\\Users\\hodaa\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1436: UserWarning:\n\nKMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.\n\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-2-output-2.png){width=576 height=449}\n:::\n:::\n\n\nRunning this code will give usa visual representation of the clustered data points, showing how K-Means algorithm groups the data into distinct clusters. This is a simple yet effective way to understand the concept of clustering in machine learning.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}